import React, { useState } from 'react';
import { Stack, Typography, Box, Divider } from '@mui/material';
import { ZuButton } from '@/components/core';
import { ArrowUpLeftIcon, RightArrowIcon, ScrollIcon, ChevronDownIcon, ChevronUpIcon, HeartIcon } from '@/components/icons';

interface IProps {
  setIsAgree?: React.Dispatch<React.SetStateAction<boolean>> | any;
  setIsMint?: React.Dispatch<React.SetStateAction<boolean>> | any;
  setIsTransaction?: React.Dispatch<React.SetStateAction<boolean>> | any;
  setIsComplete?: React.Dispatch<React.SetStateAction<boolean>> | any;
  handleClose?: () => void
}


export const SponsorAgree: React.FC<IProps> = ({ setIsAgree }) => {
  return (
    <Stack>
      <Stack padding="20px" spacing="10px" borderBottom="1px solid #383838" bgcolor="#262626">
        <Stack direction="row" spacing="10px" alignItems="center">
          <Box component="img" height="30px" width="30px" borderRadius="2px" src="/14.webp" />
          <Typography variant="subtitleLB">
            EventName
          </Typography>
        </Stack>
        <Typography variant="bodyS" color="#FF9C66">
          Disclaimer: the ticketing system is in beta, please take caution moving forward
        </Typography>
      </Stack>
      <Stack padding="20px" height="100vh">
        <Stack padding="20px" border="1px solid #383838" bgcolor="#262626" spacing="20px" borderRadius="10px">
          <Typography variant="subtitleLB">
            Sponsors Must Know,
          </Typography>
          <Stack spacing="10px" paddingX="10px">
            <Typography variant="subtitleMB" sx={{ opacity: 0.8 }}>
              Artificial Intelligence (AI) Disclaimer
            </Typography>
            <Typography variant="bodyB" sx={{ opacity: 0.7 }} height="550px">
              If your company publishes content generated by artificial intelligence (AI) or machine learning models,
              consider adding an AI disclaimer to your site to differentiate it from your human-created content.
            </Typography>
          </Stack>
          <ZuButton startIcon={<RightArrowIcon color="#67DBFF" />}
            onClick={() => { setIsAgree(true); }}
            sx={{ width: "100%", color: "#67DBFF", backgroundColor: "#67DBFF33", border: "border: 1px solid rgba(103, 219, 255, 0.20)" }}>
            Agree and Continue
          </ZuButton>
        </Stack>
      </Stack>
    </Stack>
  )
}

export const SponsorMint: React.FC<IProps> = ({ setIsAgree, setIsMint }) => {
  const [awaiting, setAwaiting] = useState<boolean>(false);

  return (
    <Stack>
      <Stack padding="20px" bgcolor="#262626" borderBottom="1px solid #383838" spacing="20px">
        <Stack direction="row" spacing="10px" alignItems="center">
          <Box component="img" height="30px" width="30px" borderRadius="2px" src="/14.webp" />
          <Typography variant="subtitleLB">
            EventName
          </Typography>
        </Stack>
        <Typography variant="bodyS" color="#FF9C66">
          Disclaimer: the ticketing system is in beta, please take caution moving forward
        </Typography>
      </Stack>
      <Stack spacing="10px" padding="20px" height="100vh">
        <Stack spacing="20px">
          <Typography variant="subtitleLB">
            Your Ticket
          </Typography>
          <Stack alignItems="center">
            <Box component="img" width="250px" height="250px" borderRadius="20px" src="/26.png" />
          </Stack>
          <Stack border="1px solid #383838" borderRadius="20px" divider={<Divider sx={{ border: "1px solid #383838" }} />} spacing="10px" padding="20px">
            <Stack direction="row" spacing="10px">
              <Typography variant="bodyM" sx={{ opacity: 0.6 }}>
                Ticket:
              </Typography>
              <Typography variant="bodyBB" sx={{ opacity: 0.8 }}>
                Sponsor Package 1
              </Typography>
            </Stack>
            <Stack direction="row" spacing="10px">
              <Typography variant="bodyM" sx={{ opacity: 0.6 }}>
                Contributing Amount to Mint:
              </Typography>
              <Stack direction="row" spacing="5px">
                <Typography variant="bodyBB" sx={{ opacity: 0.8 }}>
                  100,000
                </Typography>
                <Typography variant="caption" sx={{ opacity: 0.8 }}>
                  USDT
                </Typography>
              </Stack>
            </Stack>
            <Stack spacing="10px">
              <Typography variant="bodyM" sx={{ opacity: 0.6 }}>
                Ticket Description
              </Typography>
              <Typography variant="bodyS" sx={{ opacity: 0.8 }}>
                Get ready to groove at the Summer Music Festival! Join us for a day filled with live music, food trucks, and good vibes.
              </Typography>
            </Stack>
          </Stack>
          <ZuButton startIcon={<RightArrowIcon color="#67DBFF" />}
            onClick={() => { setIsAgree(false); setIsMint(true); }}
            sx={{ width: "100%", color: "#67DBFF", backgroundColor: "#67DBFF33", border: "border: 1px solid rgba(103, 219, 255, 0.20)" }}>
            Mint Ticket
          </ZuButton>
        </Stack>
        <Typography variant="bodyS" color="#FF9C66" sx={{ opacity: 0.8 }} textAlign="center">
          Make sure to also have native tokens in your wallet to finalize the transaction
        </Typography>
        <Stack direction="row" spacing="10px" justifyContent="center">
          <Typography variant="caption" sx={{ opacity: 0.6 }}>
            TICKETING PROTOCOL:
          </Typography>
          <ScrollIcon />
        </Stack>
      </Stack>
    </Stack>
  )
}

export const SponsorTransaction: React.FC<IProps> = ({ setIsMint, setIsTransaction, handleClose }) => {
  const [isWait, setIsWait] = useState<boolean>(false);

  return (
    <Stack>
      <Stack padding="20px" bgcolor="#262626" borderBottom="1px solid #383838" spacing="20px">
        <Stack direction="row" spacing="10px" alignItems="center">
          <Box component="img" height="30px" width="30px" borderRadius="2px" src="/14.webp" />
          <Typography variant="subtitleLB">
            EventName
          </Typography>
        </Stack>
        <Typography variant="bodyS" color="#FF9C66">
          Disclaimer: the ticketing system is in beta, please take caution moving forward
        </Typography>
      </Stack>
      <Stack padding="20px" height="100vh">
        {isWait ?
          <Stack padding="20px" spacing="30px" border="1px solid #383838" bgcolor="#262626" borderRadius="10px">
            <Typography variant="subtitleLB">
              Sign in Wallet
              define data that they interacting with contract
            </Typography>
            <Stack paddingY="20px" bgcolor="#FFFFFF0D" borderRadius="10px">
              <Typography variant="subtitleS" textAlign="center">
                Awaiting transaction...
              </Typography>
            </Stack>
            <Stack direction="row" spacing="10px" justifyContent="center">
              <Typography variant="caption" sx={{ opacity: 0.6 }}>
                TICKETING PROTOCOL:
              </Typography>
              <ScrollIcon />
            </Stack>
          </Stack> :
          <Stack padding="20px" spacing="30px" border="1px solid #383838" bgcolor="#262626" borderRadius="10px">
            <Typography variant="subtitleLB">
              Sign in Wallet
              define data that they interacting with contract
            </Typography>
            <Stack paddingY="20px" bgcolor="#FFFFFF0D" borderRadius="10px"
              onClick={() => { setIsMint(false); setIsTransaction(true); }}
              sx={{ cursor: "pointer" }}
            >
              <Typography variant="subtitleS" textAlign="center">
                Transaction Complete!
              </Typography>
            </Stack>
            <Stack direction="row" spacing="10px" justifyContent="center">
              <Typography variant="caption" sx={{ opacity: 0.6 }}>
                TICKETING PROTOCOL:
              </Typography>
              <ScrollIcon />
            </Stack>
          </Stack>
        }
      </Stack>
    </Stack>
  )
}

export const SponsorComplete: React.FC<IProps> = ({ setIsTransaction, setIsComplete, handleClose }) => {
  const [view, setView] = useState<boolean>(false);
  return (
    <Stack>
      <Stack padding="20px" bgcolor="#262626" borderBottom="1px solid #383838" spacing="20px">
        <Stack direction="row" spacing="10px" alignItems="center">
          <Box component="img" height="30px" width="30px" borderRadius="2px" src="/14.webp" />
          <Typography variant="subtitleLB">
            EventName
          </Typography>
        </Stack>
        <Typography variant="bodyS" color="#FF9C66">
          Disclaimer: the ticketing system is in beta, please take caution moving forward
        </Typography>
      </Stack>
      <Stack padding="20px" spacing="30px" alignItems="center" height="100vh">
        <Typography variant="subtitleLB">
          Congrats, you received
        </Typography>
        <Box component="img" width="250px" height="250px" borderRadius="20px" src="/26.png" />
        <Stack borderRadius="10px" border="1px solid #383838" width="100%"
          sx={{ cursor: "pointer" }}
          onClick={() => setView(prev => !prev)}
        >
          {
            !view ? (
              <Stack direction="row" spacing="10px" padding="10px 20px" justifyContent="center">
                <Typography variant="bodyM">
                  View Transaction Details
                </Typography>
                <ChevronDownIcon size={4.5} />
              </Stack>
            ) :
              (
                <Stack padding="20px" spacing="10px">
                  <Stack direction="row" spacing="10px" justifyContent="center">
                    <Typography variant="bodyM">
                      Close Transaction Details
                    </Typography>
                    <ChevronUpIcon size={4.5} />
                  </Stack>
                  <Stack border="1px solid #383838" borderRadius="20px" divider={<Divider sx={{ border: "1px solid #383838" }} />} spacing="10px" padding="20px">
                    <Stack direction="row" spacing="10px">
                      <Typography variant="bodyM" sx={{ opacity: 0.6 }}>
                        Ticket:
                      </Typography>
                      <Typography variant="bodyBB" sx={{ opacity: 0.8 }}>
                        Full Pass
                      </Typography>
                    </Stack>
                    <Stack direction="row" spacing="10px">
                      <Typography variant="bodyM" sx={{ opacity: 0.6 }}>
                        Secondary Option:
                      </Typography>
                      <Typography variant="bodyBB" sx={{ opacity: 0.8 }}>
                        Shared Room
                      </Typography>
                    </Stack>
                    <Stack direction="row" spacing="10px">
                      <Typography variant="bodyM" sx={{ opacity: 0.6 }}>
                        Contributing Amount to Mint:
                      </Typography>
                      <Typography variant="bodyBB" sx={{ opacity: 0.8 }}>
                        0000 USDT
                      </Typography>
                    </Stack>
                    <Stack spacing="10px">
                      <Typography variant="bodyM" sx={{ opacity: 0.6 }}>
                        Ticket Description
                      </Typography>
                      <Typography variant="bodyS" sx={{ opacity: 0.8 }}>
                        Get ready to groove at the Summer Music Festival! Join us for a day filled with live music, food trucks, and good vibes.
                      </Typography>
                    </Stack>
                  </Stack>
                </Stack>
              )
          }
        </Stack>
        <ZuButton startIcon={<ArrowUpLeftIcon size={5} color="#67DBFF" />}
          onClick={() => { setIsTransaction(false); setIsComplete(false); }}
          sx={{ width: "100%", backgroundColor: '#2c383b', color: "#67DBFF" }}
        >
          Back to Event View
        </ZuButton>
        <Stack spacing="10px" alignItems="center" bgcolor="rgba(255, 94, 94, 0.10)" width="100%" padding="8px 14px" borderRadius="10px"
          border="border: 1px solid rgba(255, 94, 94, 0.20)"
        >
          <HeartIcon color="#FF5E5E" />
          <Typography variant="bodyMB" color="#FF5E5E" textAlign="center">
            Donate to the Event
          </Typography>
          <Typography variant="bodyBB">
            Send your donated tokens to zuvillage.eth
          </Typography>
        </Stack>
        <Stack direction="row" spacing="10px" justifyContent="center">
          <Typography variant="caption" sx={{ opacity: 0.6 }}>
            TICKETING PROTOCOL:
          </Typography>
          <ScrollIcon />
        </Stack>
      </Stack>
    </Stack>
  )
}



